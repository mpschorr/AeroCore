plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'com.rikonardo.papermake' version '1.0.4'
}

group = 'xyz.jeelzzz'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'CodeMC'
        url = 'https://repo.codemc.io/repository/maven-public/'
    }
    maven {
        name = 'Triumph'
        url = 'https://repo.triumphteam.dev/snapshots/'
    }
    maven {
        name = 'Jitpack'
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'dev.triumphteam:triumph-cmd-bukkit:2.0.0-SNAPSHOT'
    implementation 'cc.ekblad:4koma:1.2.0'
}

shadowJar {
    exclude 'org/jetbrains/**'
    relocate 'dev.triumphteam.cmd', 'xyz.jeelzzz.aerocore.cmdlib'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '17'
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '17'
    }
}
